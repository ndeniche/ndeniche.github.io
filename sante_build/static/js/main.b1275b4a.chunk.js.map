{"version":3,"sources":["EventForm.js","Event.js","Promo.js","App.js","serviceWorker.js","index.js"],"names":["esLocale","require","FormInput","props","label","value","id","name","onChange","react_default","a","createElement","className","type","htmlFor","DateInput","format","locale","EventForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","date","title","subtitle","description","details","key","handleInputChange","bind","assertThisInitialized","event","_this$state","target","setState","handleEventUpdate","React","Component","EventAdd","onClick","Event","events","addEvent","console","log","handleEventAdd","keys","length","Date","_this2","map","e","src_EventForm","Promo","changeTrigger","canvasSize","totalHeight","y","x","eHeight","draw","getProperties","padding","ctx","document","getElementById","getContext","fillStyle","fillRect","img","Image","cs","onload","sizex","sizey","drawImage","fill","src","process","forEach","c","i","font","fillText","width","height","App","defineProperty","src_Event","src_Promo","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b1275b4a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { format } from \"date-fns\";\r\n\r\nvar esLocale = require('date-fns/locale/es')\r\n\r\nfunction FormInput(props) {\r\n    let {label, value, id, name, onChange} = props;\r\n    return(\r\n        <div className=\"form-input\">\r\n            <input type=\"text\" name={name} value={value} onChange={onChange} />\r\n            <label htmlFor={id}>{label}</label>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction DateInput(props) {\r\n    let {label, value, id, name, onChange} = props;\r\n    return(\r\n        <div className=\"date-input\">\r\n            <label htmlFor={id}>{format(value, \"dddd\",{locale: esLocale})}</label>\r\n            <label htmlFor={id}>{format(value,\"D\")}</label>\r\n            <label htmlFor={id}>{format(value,\"MMM\",{locale: esLocale})}</label>\r\n            <input type=\"date\" value={value} name={name} onChange={onChange} />\r\n        </div>\r\n    );\r\n}\r\n\r\nclass EventForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            date: props.date,\r\n            title: props.title,\r\n            subtitle: props.subtitle,\r\n            description: props.description,\r\n            details: props.details\r\n        };\r\n\r\n        this.key = props.id;\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        let {date, title, subtitle, description, details} = this.state;\r\n        let state = {date, title, subtitle, description, details};\r\n        state[event.target.name] = event.target.value;\r\n        this.setState(state);\r\n        this.props.handleEventUpdate(\r\n            this.key,\r\n            state\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"event-form\">\r\n                <h3>Detalles del Evento</h3>\r\n                <DateInput label=\"Fecha\" value={this.state.date} name=\"date\" id=\"event-date\" onChange={this.handleInputChange} />\r\n                <FormInput label=\"Título\" value={this.state.title} name=\"title\" id=\"event-title\" onChange={this.handleInputChange} />\r\n                <FormInput label=\"Sub Título\" value={this.state.subtitle} name=\"subtitle\" id=\"event-subtitle\" onChange={this.handleInputChange} />\r\n                <FormInput label=\"Descripción\" value={this.state.description} name=\"description\" id=\"event-description\" onChange={this.handleInputChange} />\r\n                <FormInput label=\"Detalles\" value={this.state.details} name=\"details\" id=\"event-detalles\" onChange={this.handleInputChange} />\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventForm;","import React from 'react';\r\nimport EventForm from './EventForm';\r\n\r\nfunction getEvent() {\r\n    return {\r\n        date: new Date(),\r\n        title: \"\",\r\n        subtitle: \"\",\r\n        description: \"\",\r\n        details: \"\"\r\n    }\r\n}\r\n\r\nfunction EventAdd(props) {\r\n    return(\r\n        <li className=\"event-add\" onClick={props.onClick}>\r\n            +\r\n        </li>\r\n    );\r\n}\r\n\r\nclass Event extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            events: props.events\r\n        }\r\n\r\n        this.addEvent = this.addEvent.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.addEvent();\r\n    }\r\n\r\n    addEvent() {\r\n        /*this.setState(state => {\r\n            const events = [...state.events, getEvent()];\r\n            return {events};\r\n        });*/\r\n        console.log(this.props);\r\n        this.props.handleEventAdd(\r\n            Object.keys(this.state.events).length, \r\n            getEvent()\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className=\"event-container\">\r\n                {Object.keys(this.state.events).map(e => \r\n                    <EventForm key={e} \r\n                               id={e}\r\n                               title={this.state.events[e].title} \r\n                               subtitle={this.state.events[e].subtitle} \r\n                               description={this.state.events[e].description} \r\n                               details={this.state.events[e].details} \r\n                               date={this.state.events[e].date}\r\n                               handleEventUpdate={this.props.handleEventUpdate} />\r\n                )}\r\n                <EventAdd onClick={this.addEvent} />\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Event;","import React from 'react';\r\n\r\nclass Promo extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            changeTrigger: props.changeTrigger,\r\n            events: props.events\r\n        }\r\n\r\n        this.canvasSize = 400;\r\n        this.totalHeight = this.canvasSize * .75;\r\n        this.y = this.canvasSize * .25;\r\n        this.x = this.canvasSize * .12;\r\n        this.eHeight = this.canvasSize * .1;\r\n\r\n        this.draw = this.draw.bind(this);\r\n        this.getProperties = this.getProperties.bind(this);\r\n    }\r\n\r\n    getProperties() {\r\n        return {\r\n            padding: (this.totalHeight - (this.eHeight * Object.keys(this.state.events).length))/5,\r\n        };\r\n    }\r\n\r\n    draw() {\r\n        var ctx = document.getElementById('canvasPromo').getContext('2d');\r\n\r\n        ctx.fillStyle = 'rgb(0,0,0)';\r\n        ctx.fillRect(0,0,this.canvasSize,this.canvasSize);\r\n\r\n        var {padding} = this.getProperties();\r\n\r\n        var img = new Image();\r\n        var cs = this.canvasSize;\r\n        img.onload = function() {\r\n            var propx = 520/800,\r\n                propy = 100/800,\r\n                sizex = propx * cs,\r\n                sizey = propy * cs;\r\n            ctx.drawImage(img, (cs - sizex)/2, (cs/100), sizex, sizey);\r\n            ctx.fill();\r\n        };\r\n        img.src = process.env.PUBLIC_URL + '/logo.png';\r\n\r\n        Object.keys(this.state.events).forEach((c,i) => {\r\n            let e = this.state.events[c];\r\n            ctx.font = (this.canvasSize * 0.05) + 'px serif';\r\n            ctx.fillStyle = 'rgb(255,255,255)';\r\n            ctx.fillText(e.title, this.x, (this.y + (i * this.eHeight) + (i * padding)));\r\n        });\r\n\r\n        ctx.fill();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h2>Promo</h2>\r\n                <canvas id=\"canvasPromo\" width={this.canvasSize} height={this.canvasSize}></canvas>\r\n                <button onClick={this.draw}>Draw</button>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Promo;","import React from 'react';\nimport Event from './Event';\nimport Promo from './Promo';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      events: {},\n    }\n\n    this.handleEventAdd = this.handleEventAdd.bind(this);\n    this.handleEventUpdate = this.handleEventUpdate.bind(this);\n  }\n\n  handleEventAdd(key, value) {\n    let events = this.state.events;\n    events[key] = value;\n    this.setState({\n      [key]: value\n    });\n  }\n\n  handleEventUpdate(key, value) {\n    let events = this.state.events;\n    events[key] = value;\n    this.setState({\n      events: events\n    });\n  }\n\n  render(){\n    return (\n      <div>\n        <header>\n          <h1>Generador de Agenda Santé</h1>\n        </header>\n        <main>\n          <Event handleEventUpdate={this.handleEventUpdate} handleEventAdd={this.handleEventAdd} events={this.state.events} />\n          <Promo events={this.state.events} />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}